-- MySQL Script generated by MySQL Workbench
-- Fri Mar 19 21:49:47 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema OrderFood
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema OrderFood
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `OrderFood` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `OrderFood` ;

-- -----------------------------------------------------
-- Table `OrderFood`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`login` (
  `loginID` INT NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`loginID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`user` (
  `UserID` INT NOT NULL,
  `firstname` VARCHAR(50) NOT NULL,
  `familyname` VARCHAR(50) NOT NULL,
  `address` VARCHAR(50) NOT NULL,
  `zipcodeID` VARCHAR(7) NOT NULL,
  `city` VARCHAR(50) NOT NULL,
  `loginID` INT NOT NULL,
  PRIMARY KEY (`UserID`),
  INDEX `FK_User_Login_idx` (`loginID` ASC) VISIBLE,
  CONSTRAINT `FK_User_Login`
    FOREIGN KEY (`loginID`)
    REFERENCES `OrderFood`.`login` (`loginID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`category` (
  `categoryID` INT NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`categoryID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`dishtype`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`dishtype` (
  `dishID` INT NOT NULL,
  `dishname` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`dishID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`product` (
  `productID` INT NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `allergies` VARCHAR(50) NOT NULL,
  `price` FLOAT NOT NULL,
  `categoryID` INT NOT NULL,
  `dishID` INT NOT NULL,
  PRIMARY KEY (`productID`),
  INDEX `FK_Product_Category_idx` (`categoryID` ASC) VISIBLE,
  INDEX `FK_Product_DishType_idx` (`dishID` ASC) VISIBLE,
  CONSTRAINT `FK_Product_Category`
    FOREIGN KEY (`categoryID`)
    REFERENCES `OrderFood`.`category` (`categoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Product_DishType`
    FOREIGN KEY (`dishID`)
    REFERENCES `OrderFood`.`dishtype` (`dishID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`tax`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`tax` (
  `taxID` INT NOT NULL,
  `taxrate` FLOAT NOT NULL,
  PRIMARY KEY (`taxID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`shipping`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`shipping` (
  `shippingID` INT NOT NULL,
  `costs` FLOAT NOT NULL,
  PRIMARY KEY (`shippingID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`order` (
  `orderID` INT NOT NULL,
  `userID` INT NOT NULL,
  `taxID` INT NOT NULL,
  `shippingID` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `totalprice` FLOAT NOT NULL,
  PRIMARY KEY (`orderID`),
  INDEX `FK_Order_User_idx` (`userID` ASC) VISIBLE,
  INDEX `FK_Order_Tax_idx` (`taxID` ASC) VISIBLE,
  INDEX `FK_Order_Shipping_idx` (`shippingID` ASC) VISIBLE,
  CONSTRAINT `FK_Order_User`
    FOREIGN KEY (`userID`)
    REFERENCES `OrderFood`.`user` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Order_Tax`
    FOREIGN KEY (`taxID`)
    REFERENCES `OrderFood`.`tax` (`taxID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Order_Shipping`
    FOREIGN KEY (`shippingID`)
    REFERENCES `OrderFood`.`shipping` (`shippingID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`option`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`option` (
  `optionsID` INT NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `description` VARCHAR(100) NULL,
  `content` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`optionsID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`orderrow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`orderrow` (
  `orderID` INT NOT NULL,
  `productID` INT NOT NULL,
  `optionID` INT NOT NULL,
  `amount` INT NOT NULL,
  PRIMARY KEY (`orderID`, `productID`, `optionID`),
  INDEX `FK_OrderRow_Product_idx` (`productID` ASC) VISIBLE,
  INDEX `FK_OrderRow_Option_idx` (`optionID` ASC) VISIBLE,
  CONSTRAINT `FK_OrderRow_Product`
    FOREIGN KEY (`productID`)
    REFERENCES `OrderFood`.`product` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_OrderRow_Order`
    FOREIGN KEY (`orderID`)
    REFERENCES `OrderFood`.`order` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_OrderRow_Option`
    FOREIGN KEY (`optionID`)
    REFERENCES `OrderFood`.`option` (`optionsID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`userrole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`userrole` (
  `roleID` INT NOT NULL,
  `role` VARCHAR(20) NOT NULL,
  `roledescription` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`roleID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`shoppingcart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`shoppingcart` (
  `cartID` INT NOT NULL,
  `userID` INT NOT NULL,
  PRIMARY KEY (`cartID`),
  INDEX `FK_ShoppingCart_User_idx` (`userID` ASC) VISIBLE,
  CONSTRAINT `FK_ShoppingCart_User`
    FOREIGN KEY (`userID`)
    REFERENCES `OrderFood`.`user` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`cartrow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`cartrow` (
  `cartID` INT NOT NULL,
  `productID` INT NOT NULL,
  `amount` INT NOT NULL,
  PRIMARY KEY (`cartID`, `productID`),
  INDEX `FK_CartRow_Product_idx` (`productID` ASC) VISIBLE,
  CONSTRAINT `FK_CartRow_ShoppingCart`
    FOREIGN KEY (`cartID`)
    REFERENCES `OrderFood`.`shoppingcart` (`cartID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CartRow_Product`
    FOREIGN KEY (`productID`)
    REFERENCES `OrderFood`.`product` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `OrderFood`.`userrolerow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OrderFood`.`userrolerow` (
  `roleID` INT NOT NULL,
  `userID` INT NOT NULL,
  PRIMARY KEY (`roleID`, `userID`),
  INDEX `FK_UserRoleRow_User_idx` (`userID` ASC) VISIBLE,
  CONSTRAINT `FK_UserRoleRow_User`
    FOREIGN KEY (`userID`)
    REFERENCES `OrderFood`.`user` (`UserID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_UserRoleRow_UserRole`
    FOREIGN KEY (`roleID`)
    REFERENCES `OrderFood`.`userrole` (`roleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
